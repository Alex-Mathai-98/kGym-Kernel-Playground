general protection fault, probably for non-canonical address 0xdffffc0000000000: 0000 [#1] PREEMPT SMP KASAN
KASAN: null-ptr-deref in range [0x0000000000000000-0x0000000000000007]
CPU: 0 PID: 4341 Comm: syz-executor.2 Not tainted 5.7.0-rc2-syzkaller #0
Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 03/27/2024
RIP: 0010:fq_codel_enqueue+0x93f/0x11b0
Code: 39 c4 0f 83 d6 00 00 00 e8 de 5d 23 fb 48 8b 44 24 38 80 38 00 0f 85 81 06 00 00 48 8b 44 24 60 48 8b 00 48 89 c2 48 c1 ea 03 <42> 80 3c 2a 00 0f 85 52 06 00 00 48 8b 10 48 8d 78 28 48 8b 74 24
RSP: 0018:ffffc900014e7810 EFLAGS: 00010256
RAX: 0000000000000000 RBX: 0000000000000000 RCX: ffff8881d38e0000
RDX: 0000000000000000 RSI: ffffffff864f43e2 RDI: 0000000000000004
RBP: ffffc900014e7910 R08: 0000000000000000 R09: 0000000000000400
R10: 0000000000000004 R11: 0000000000000000 R12: 0000000000000400
R13: dffffc0000000000 R14: ffffc900014e79f0 R15: 0000000000000000
FS:  00007f4bd79fc6c0(0000) GS:ffff8881f6200000(0000) knlGS:0000000000000000
CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
CR2: 00007f2685350b3b CR3: 00000001f13dd000 CR4: 0000000000340ef0
Call Trace:
 __dev_queue_xmit+0x1aa1/0x3050
 packet_sendmsg+0x22b6/0x5020
 sock_sendmsg+0xc9/0x120
 __sys_sendto+0x1e7/0x2d0
 __x64_sys_sendto+0xdc/0x1b0
 do_syscall_64+0xf1/0x240
 entry_SYSCALL_64_after_hwframe+0x49/0xb3
RIP: 0033:0x7f4bd869cf69
Code: 28 00 00 00 75 05 48 83 c4 28 c3 e8 e1 20 00 00 90 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 c7 c1 b0 ff ff ff f7 d8 64 89 01 48
RSP: 002b:00007f4bd79fc0c8 EFLAGS: 00000246 ORIG_RAX: 000000000000002c
RAX: ffffffffffffffda RBX: 00007f4bd87cb050 RCX: 00007f4bd869cf69
RDX: 00000000000001e8 RSI: 0000000020000480 RDI: 0000000000000005
RBP: 00007f4bd86e94a4 R08: 0000000000000000 R09: 0000000000000000
R10: 0000000000000000 R11: 0000000000000246 R12: 0000000000000000
R13: 000000000000006e R14: 00007f4bd87cb050 R15: 00007ffd48fa7148
Modules linked in:
---[ end trace dc489aecb7e636c7 ]---
RIP: 0010:fq_codel_enqueue+0x93f/0x11b0
Code: 39 c4 0f 83 d6 00 00 00 e8 de 5d 23 fb 48 8b 44 24 38 80 38 00 0f 85 81 06 00 00 48 8b 44 24 60 48 8b 00 48 89 c2 48 c1 ea 03 <42> 80 3c 2a 00 0f 85 52 06 00 00 48 8b 10 48 8d 78 28 48 8b 74 24
RSP: 0018:ffffc900014e7810 EFLAGS: 00010256
RAX: 0000000000000000 RBX: 0000000000000000 RCX: ffff8881d38e0000
RDX: 0000000000000000 RSI: ffffffff864f43e2 RDI: 0000000000000004
RBP: ffffc900014e7910 R08: 0000000000000000 R09: 0000000000000400
R10: 0000000000000004 R11: 0000000000000000 R12: 0000000000000400
R13: dffffc0000000000 R14: ffffc900014e79f0 R15: 0000000000000000
FS:  00007f4bd79fc6c0(0000) GS:ffff8881f6200000(0000) knlGS:0000000000000000
CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
CR2: 00007f2685350b3b CR3: 00000001f13dd000 CR4: 0000000000340ef0
----------------
Code disassembly (best guess):
   0:	39 c4                	cmp    %eax,%esp
   2:	0f 83 d6 00 00 00    	jae    0xde
   8:	e8 de 5d 23 fb       	call   0xfb235deb
   d:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
  12:	80 38 00             	cmpb   $0x0,(%rax)
  15:	0f 85 81 06 00 00    	jne    0x69c
  1b:	48 8b 44 24 60       	mov    0x60(%rsp),%rax
  20:	48 8b 00             	mov    (%rax),%rax
  23:	48 89 c2             	mov    %rax,%rdx
  26:	48 c1 ea 03          	shr    $0x3,%rdx
* 2a:	42 80 3c 2a 00       	cmpb   $0x0,(%rdx,%r13,1) <-- trapping instruction
  2f:	0f 85 52 06 00 00    	jne    0x687
  35:	48 8b 10             	mov    (%rax),%rdx
  38:	48 8d 78 28          	lea    0x28(%rax),%rdi
  3c:	48                   	rex.W
  3d:	8b                   	.byte 0x8b
  3e:	74 24                	je     0x64
