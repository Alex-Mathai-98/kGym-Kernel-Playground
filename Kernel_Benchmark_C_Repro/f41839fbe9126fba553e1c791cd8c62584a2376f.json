{
    "version": 1,
    "title": "kernel BUG in find_mergeable_anon_vma",
    "display-title": "kernel BUG in find_mergeable_anon_vma",
    "id": "f41839fbe9126fba553e1c791cd8c62584a2376f",
    "status": "fixed",
    "fix-commits": [
        {
            "title": "mm: enable maple tree RCU mode by default",
            "link": "https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=3dd4432549415f3c65dd52d5c687629efbf4ece1",
            "hash": "3dd4432549415f3c65dd52d5c687629efbf4ece1",
            "repo": "git://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git",
            "branch": "master"
        }
    ],
    "discussions": [
        "https://lore.kernel.org/all/000000000000b0a65805f663ace6@google.com/T/",
        "https://lore.kernel.org/all/20230327185532.2354250-1-Liam.Howlett@oracle.com/T/",
        "https://lore.kernel.org/all/20230411151055.2910579-1-Liam.Howlett@oracle.com/T/"
    ],
    "crashes": [
        {
            "title": "kernel BUG in find_mergeable_anon_vma",
            "syz-reproducer": "/text?tag=ReproSyz&x=130602bcc80000",
            "c-reproducer": "/text?tag=ReproC&x=10b61b54c80000",
            "kernel-config": "/text?tag=KernelConfig&x=cab35c936731a347",
            "kernel-source-git": "https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/log/?id=0988a0ea791999ebbf95693f2676381825b05033",
            "kernel-source-commit": "0988a0ea791999ebbf95693f2676381825b05033",
            "syzkaller-git": "https://github.com/google/syzkaller/commits/f8902b5747fbe3d5b860bd782eec63fc9c7da6e7",
            "syzkaller-commit": "f8902b5747fbe3d5b860bd782eec63fc9c7da6e7",
            "compiler-description": "gcc (Debian 10.2.1-6) 10.2.1 20210110, GNU ld (GNU Binutils for Debian) 2.35.2",
            "architecture": "amd64",
            "crash-report-link": "/text?tag=CrashReport&x=16f2b7acc80000"
        }
    ],
    "subsystems": [
        "mm"
    ],
    "parent_of_fix_commit": "790e1fa86b340c2bd4a327e01c161f7a1ad885f6",
    "patch": "diff --git a/include/linux/mm_types.h b/include/linux/mm_types.h\nindex 0722859c3647..a57e6ae78e65 100644\n--- a/include/linux/mm_types.h\n+++ b/include/linux/mm_types.h\n@@ -774,7 +774,8 @@ struct mm_struct {\n \tunsigned long cpu_bitmap[];\n };\n \n-#define MM_MT_FLAGS\t(MT_FLAGS_ALLOC_RANGE | MT_FLAGS_LOCK_EXTERN)\n+#define MM_MT_FLAGS\t(MT_FLAGS_ALLOC_RANGE | MT_FLAGS_LOCK_EXTERN | \\\n+\t\t\t MT_FLAGS_USE_RCU)\n extern struct mm_struct init_mm;\n \n /* Pointer magic because the dynamic array size confuses some compilers. */\ndiff --git a/kernel/fork.c b/kernel/fork.c\nindex c0257cbee093..0c92f224c68c 100644\n--- a/kernel/fork.c\n+++ b/kernel/fork.c\n@@ -617,6 +617,7 @@ static __latent_entropy int dup_mmap(struct mm_struct *mm,\n \tif (retval)\n \t\tgoto out;\n \n+\tmt_clear_in_rcu(vmi.mas.tree);\n \tfor_each_vma(old_vmi, mpnt) {\n \t\tstruct file *file;\n \n@@ -700,6 +701,8 @@ static __latent_entropy int dup_mmap(struct mm_struct *mm,\n \tretval = arch_dup_mmap(oldmm, mm);\n loop_out:\n \tvma_iter_free(&vmi);\n+\tif (!retval)\n+\t\tmt_set_in_rcu(vmi.mas.tree);\n out:\n \tmmap_write_unlock(mm);\n \tflush_tlb_mm(oldmm);\ndiff --git a/mm/mmap.c b/mm/mmap.c\nindex ad499f7b767f..ff68a67a2a7c 100644\n--- a/mm/mmap.c\n+++ b/mm/mmap.c\n@@ -2277,7 +2277,7 @@ do_vmi_align_munmap(struct vma_iterator *vmi, struct vm_area_struct *vma,\n \tint count = 0;\n \tint error = -ENOMEM;\n \tMA_STATE(mas_detach, &mt_detach, 0, 0);\n-\tmt_init_flags(&mt_detach, MT_FLAGS_LOCK_EXTERN);\n+\tmt_init_flags(&mt_detach, vmi->mas.tree->ma_flags & MT_FLAGS_LOCK_MASK);\n \tmt_set_external_lock(&mt_detach, &mm->mmap_lock);\n \n \t/*\n@@ -3037,6 +3037,7 @@ void exit_mmap(struct mm_struct *mm)\n \t */\n \tset_bit(MMF_OOM_SKIP, &mm->flags);\n \tmmap_write_lock(mm);\n+\tmt_clear_in_rcu(&mm->mm_mt);\n \tfree_pgtables(&tlb, &mm->mm_mt, vma, FIRST_USER_ADDRESS,\n \t\t      USER_PGTABLES_CEILING);\n \ttlb_finish_mmu(&tlb);\n",
    "patch_modified_files": [
        "include/linux/mm_types.h",
        "kernel/fork.c",
        "mm/mmap.c"
    ]
}