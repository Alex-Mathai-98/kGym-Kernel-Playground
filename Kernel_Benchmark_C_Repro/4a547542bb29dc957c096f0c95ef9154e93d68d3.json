{
    "version": 1,
    "title": "kernel BUG in ext4_ind_remove_space",
    "display-title": "kernel BUG in ext4_ind_remove_space",
    "id": "4a547542bb29dc957c096f0c95ef9154e93d68d3",
    "status": "fixed",
    "fix-commits": [
        {
            "title": "ext4: limit length to bitmap_maxbytes - blocksize in punch_hole",
            "link": "https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=2da376228a2427501feb9d15815a45dbdbdd753e",
            "hash": "2da376228a2427501feb9d15815a45dbdbdd753e",
            "repo": "git://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git",
            "branch": "master"
        }
    ],
    "discussions": [
        "https://lore.kernel.org/all/000000000000183d9e05d7f0c0ee@google.com/T/",
        "https://lore.kernel.org/all/20220315213857.268414-1-tadeusz.struk@linaro.org/T/"
    ],
    "crashes": [
        {
            "title": "kernel BUG in ext4_ind_remove_space",
            "syz-reproducer": "/text?tag=ReproSyz&x=1205b189700000",
            "c-reproducer": "/text?tag=ReproC&x=15dda4fe700000",
            "kernel-config": "/text?tag=KernelConfig&x=d35f9bc6884af6c9",
            "kernel-source-git": "https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/log/?id=09688c0166e76ce2fb85e86b9d99be8b0084cdf9",
            "kernel-source-commit": "09688c0166e76ce2fb85e86b9d99be8b0084cdf9",
            "syzkaller-git": "https://github.com/google/syzkaller/commits/9e8eaa75a18a5cf8102e862be692c0781759e51b",
            "syzkaller-commit": "9e8eaa75a18a5cf8102e862be692c0781759e51b",
            "compiler-description": "gcc (Debian 10.2.1-6) 10.2.1 20210110, GNU ld (GNU Binutils for Debian) 2.35.2",
            "architecture": "amd64",
            "crash-report-link": "/text?tag=CrashReport&x=151b6361700000"
        }
    ],
    "patch_modified_functions": [
        [
            "ext4_punch_hole",
            "fs/ext4/inode.c"
        ]
    ],
    "patch_commit_date": "2022-03-31T20:05:15+00:00",
    "cause_commit_date": null,
    "subsystems": [
        "ext4"
    ],
    "parent_of_fix_commit": "c186f0887fe7061a35cebef024550ec33ef8fbd8",
    "patch": "diff --git a/fs/ext4/inode.c b/fs/ext4/inode.c\nindex 955dd978dccf..d815502cc97c 100644\n--- a/fs/ext4/inode.c\n+++ b/fs/ext4/inode.c\n@@ -3952,7 +3952,8 @@ int ext4_punch_hole(struct file *file, loff_t offset, loff_t length)\n \tstruct super_block *sb = inode->i_sb;\n \text4_lblk_t first_block, stop_block;\n \tstruct address_space *mapping = inode->i_mapping;\n-\tloff_t first_block_offset, last_block_offset;\n+\tloff_t first_block_offset, last_block_offset, max_length;\n+\tstruct ext4_sb_info *sbi = EXT4_SB(inode->i_sb);\n \thandle_t *handle;\n \tunsigned int credits;\n \tint ret = 0, ret2 = 0;\n@@ -3995,6 +3996,14 @@ int ext4_punch_hole(struct file *file, loff_t offset, loff_t length)\n \t\t   offset;\n \t}\n \n+\t/*\n+\t * For punch hole the length + offset needs to be within one block\n+\t * before last range. Adjust the length if it goes beyond that limit.\n+\t */\n+\tmax_length = sbi->s_bitmap_maxbytes - inode->i_sb->s_blocksize;\n+\tif (offset + length > max_length)\n+\t\tlength = max_length - offset;\n+\n \tif (offset & (sb->s_blocksize - 1) ||\n \t    (offset + length) & (sb->s_blocksize - 1)) {\n \t\t/*\n",
    "patch_modified_files": [
        "fs/ext4/inode.c"
    ]
}